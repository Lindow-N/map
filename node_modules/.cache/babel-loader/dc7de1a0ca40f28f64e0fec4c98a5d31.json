{"ast":null,"code":"var _jsxFileName = \"/home/etudiant/Bureau/test/test2/react-todo-app-v1-master/src/map.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nconst mapStyles = {\n  width: '70%',\n  height: '100%'\n};\nvar markers = [{\n  id: 1,\n  name: \"Paris\",\n  position: {\n    lat: 48.856788489137216,\n    lng: 2.3521950779098466\n  }\n}, {\n  id: 2,\n  name: \"Tokyo\",\n  position: {\n    lat: 35.68060395408808,\n    lng: 139.7690013067459\n  }\n}, {\n  id: 3,\n  name: \"Pékin\",\n  position: {\n    lat: 39.90445096377794,\n    lng: 116.40744327976226\n  }\n}, {\n  id: 4,\n  name: \"New York\",\n  position: {\n    lat: 40.712776,\n    lng: -74.005974\n  }\n}, {\n  id: 5,\n  name: \"Mexique\",\n  position: {\n    lat: 23.63480446746952,\n    lng: -102.55273572023772\n  }\n}];\nexport class SimpleMap extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showingInfoWindow: false,\n      // Hides or shows the InfoWindow\n      activeMarker: {},\n      // Shows the active marker upon click\n      selectedPlace: {},\n      // Shows the InfoWindow to the selected place upon a marker\n      lat: 0,\n      lng: 0\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  componentWillMount() {\n    if (!!navigator.geolocation) {\n      navigator.geolocation.watchPosition(position => {\n        this.setState({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, err => console.log(err), {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 10000\n      });\n    } else {\n      //  // No Support Web\n      alert('ERR,');\n    }\n  }\n\n  render() {\n    const {\n      lat,\n      lng\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 3,\n      style: mapStyles,\n      initialCenter: {\n        lat: 7,\n        lng: 7\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, markers.map(_ref => {\n      let {\n        id,\n        name,\n        position\n      } = _ref;\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: id,\n        position: position,\n        onClick: this.onMarkerClick,\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 10\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Marker, {\n      position: {\n        lat,\n        lng\n      },\n      onClick: this.onMarkerClick,\n      name: \"Votre position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, this.state.selectedPlace.name))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDE19jz0Ojpx2q-mepUlNKjlH5mUvrkHsM'\n})(SimpleMap);","map":{"version":3,"sources":["/home/etudiant/Bureau/test/test2/react-todo-app-v1-master/src/map.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","mapStyles","width","height","markers","id","name","position","lat","lng","SimpleMap","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","componentWillMount","navigator","geolocation","watchPosition","coords","latitude","longitude","err","console","log","enableHighAccuracy","timeout","maximumAge","alert","render","google","map","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\n\nconst mapStyles = {\n  width: '70%',\n  height: '100%'\n};\n\nvar markers = [\n  {\n    id: 1,\n    name: \"Paris\",\n    position: { lat: 48.856788489137216, lng: 2.3521950779098466 }\n  },\n  {\n    id: 2,\n    name: \"Tokyo\",\n    position: { lat: 35.68060395408808, lng: 139.7690013067459 }\n  },\n  {\n    id: 3,\n    name: \"Pékin\",\n    position: { lat: 39.90445096377794, lng: 116.40744327976226 }\n  },\n  {\n    id: 4,\n    name: \"New York\",\n    position: { lat: 40.712776, lng: -74.005974 }\n  },\n  {\n    id: 5,\n    name: \"Mexique\",\n    position: { lat: 23.63480446746952, lng: -102.55273572023772}\n  }\n];\n\n\n\n\nexport class SimpleMap extends Component {\n\n  state = {\n    showingInfoWindow: false,  // Hides or shows the InfoWindow\n    activeMarker: {},          // Shows the active marker upon click\n    selectedPlace: {} ,         // Shows the InfoWindow to the selected place upon a marker\n   \n     \n    lat: 0,\n      lng: 0,\n  };\n\n \n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  componentWillMount(){\n    if (!!navigator.geolocation) {\n      navigator.geolocation.watchPosition((position) => {\n        this.setState({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      },\n      (err) => console.log(err),\n      { enableHighAccuracy: true, timeout: 10000, maximumAge: 10000 },\n      );\n    } else {\n      //  // No Support Web\n      alert('ERR,')\n    }\n  }\n\n  render() {\n    \n    const { lat, lng } = this.state;\n    return (\n\n    \n\n      <Map\n        google={this.props.google}\n        zoom={3}\n        style={mapStyles}\n        initialCenter={{\n          \n          lat: 7,\n          lng: 7\n\n          \n        }}\n      >\n       \n       {markers.map(({id, name, position }) => (\n         <Marker\n         key={id}\n         position={position}\n         onClick={this.onMarkerClick}\n         name={name}\n       ></Marker>\n       ))}\n\n      <Marker position={{ lat, lng }} onClick={this.onMarkerClick} name=\"Votre position\"/>\n     \n        \n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </Map>\n\n      \n     \n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDE19jz0Ojpx2q-mepUlNKjlH5mUvrkHsM'\n})(SimpleMap);"]},"metadata":{},"sourceType":"module"}