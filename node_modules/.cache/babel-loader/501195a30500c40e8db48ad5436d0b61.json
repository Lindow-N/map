{"ast":null,"code":"var _jsxFileName = \"/home/etudiant/Bureau/test/test2/react-todo-app-v1-master/src/components/TodoForm.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Autocomplete from \"react-google-autocomplete\";\nconst API_KEY = \"'AIzaSyDE19jz0Ojpx2q-mepUlNKjlH5mUvrkHsM'\";\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleChange();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"todo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, props.edit ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Update your item\",\n    value: input,\n    onChange: handleChange,\n    name: \"text\",\n    ref: inputRef,\n    className: \"todo-input edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    className: \"todo-button edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Update\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Autocomplete, {\n    apiKey: API_KEY,\n    placeholder: \"Ajouter une ville\",\n    onChange: handleChange,\n    name: \"text\",\n    className: \"todo-input\",\n    value: input,\n    ref: inputRef,\n    onPlaceSelected: input => {\n      console.log(input.address_components[0].long_name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), \";\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    className: \"todo-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Ajouter\")));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/home/etudiant/Bureau/test/test2/react-todo-app-v1-master/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","Autocomplete","API_KEY","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleSubmit","e","preventDefault","handleChange","onSubmit","id","Math","floor","random","text","console","log","address_components","long_name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAGA,MAAMC,OAAO,GAAG,2CAAhB;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACM,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AAEA,QAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFQ,CAAT;;AAMA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,YAAY;AACZX,IAAAA,KAAK,CAACY,QAAN,CAAe;AACbC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADS;AAEbC,MAAAA,IAAI,EAAEhB;AAFO,KAAf;AAIAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GATD;;AAYA,sBACE;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAA8B,IAAA,SAAS,EAAC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACG,IAAN,gBACC,uDACE;AACE,IAAA,WAAW,EAAC,kBADd;AAEE,IAAA,KAAK,EAAEF,KAFT;AAGE,IAAA,QAAQ,EAAEU,YAHZ;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,GAAG,EAAEN,QALP;AAME,IAAA,SAAS,EAAC,iBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAQ,IAAA,OAAO,EAAEG,YAAjB;AAA+B,IAAA,SAAS,EAAC,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADD,gBAeC,uDAGF,oBAAC,YAAD;AACF,IAAA,MAAM,EAAGV,OADP;AAEF,IAAA,WAAW,EAAC,mBAFV;AAGF,IAAA,QAAQ,EAAEa,YAHR;AAIF,IAAA,IAAI,EAAC,MAJH;AAKF,IAAA,SAAS,EAAC,YALR;AAMF,IAAA,KAAK,EAAIV,KANP;AAOF,IAAA,GAAG,EAAEI,QAPH;AAQF,IAAA,eAAe,EAAGJ,KAAD,IAAU;AAC3BiB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAK,CAACmB,kBAAN,CAAyB,CAAzB,EAA4BC,SAAxC;AAEC,KAXC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHE,oBAkBE;AAAQ,IAAA,OAAO,EAAEb,YAAjB;AAA+B,IAAA,SAAS,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBF,CAhBJ,CADF;AA0CD;;AAED,eAAeT,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Autocomplete from \"react-google-autocomplete\";\n\n\nconst API_KEY = \"'AIzaSyDE19jz0Ojpx2q-mepUlNKjlH5mUvrkHsM'\";\n\n\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    handleChange()\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n  \n\n      <Autocomplete\n    apiKey= {API_KEY}\n    placeholder='Ajouter une ville'\n    onChange={handleChange}\n    name='text'\n    className='todo-input'\n    value = {input}\n    ref={inputRef}\n    onPlaceSelected={(input) =>{ \n    console.log(input.address_components[0].long_name)\n    \n    }}\n  \n/>;\n\n          <button onClick={handleSubmit} className='todo-button'>\n            Ajouter\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}