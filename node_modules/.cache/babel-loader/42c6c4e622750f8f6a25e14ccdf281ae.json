{"ast":null,"code":"var _jsxFileName = \"/home/etudiant/Bureau/test/test2/react-todo-app-v1-master/src/map.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nconst mapStyles = {\n  width: '70%',\n  height: '100%'\n};\nvar markers = [{\n  id: 1,\n  name: \"Paris\",\n  position: {\n    lat: 48.856788489137216,\n    lng: 2.3521950779098466\n  }\n}, {\n  id: 2,\n  name: \"Tokyo\",\n  position: {\n    lat: 35.68060395408808,\n    lng: 139.7690013067459\n  }\n}, {\n  id: 3,\n  name: \"Pékin\",\n  position: {\n    lat: 39.90445096377794,\n    lng: 116.40744327976226\n  }\n}, {\n  id: 4,\n  name: \"New York\",\n  position: {\n    lat: 40.712776,\n    lng: -74.005974\n  }\n}, {\n  id: 5,\n  name: \"Mexique\",\n  position: {\n    lat: 23.63480446746952,\n    lng: -102.55273572023772\n  }\n}];\n\nfunction SimpleMap(props) {\n  this.state = {\n    showingInfoWindow: false,\n    // Hides or shows the InfoWindow\n    activeMarker: {},\n    // Shows the active marker upon click\n    selectedPlace: {},\n    // Shows the InfoWindow to the selected place upon a marker\n    lat: 0,\n    lng: 0\n  };\n\n  const onMarkerClick = (props, marker, e) => this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  const onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  const {\n    lat,\n    lng\n  } = this.state;\n  return /*#__PURE__*/React.createElement(Map, {\n    google: this.props.google,\n    zoom: 3,\n    style: mapStyles,\n    initialCenter: {\n      lat: 7,\n      lng: 7\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, markers.map(_ref => {\n    let {\n      id,\n      name,\n      position\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: id,\n      position: position,\n      onClick: this.onMarkerClick,\n      name: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 10\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: {\n      lat,\n      lng\n    },\n    onClick: this.onMarkerClick,\n    name: \"Votre position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoWindow, {\n    marker: this.state.activeMarker,\n    visible: this.state.showingInfoWindow,\n    onClose: this.onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, this.state.selectedPlace.name))));\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDE19jz0Ojpx2q-mepUlNKjlH5mUvrkHsM'\n})(SimpleMap);","map":{"version":3,"sources":["/home/etudiant/Bureau/test/test2/react-todo-app-v1-master/src/map.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","mapStyles","width","height","markers","id","name","position","lat","lng","SimpleMap","props","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","setState","onClose","google","map","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,UAAhC,EAA4CC,MAA5C,QAA0D,mBAA1D;AAGA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,KADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,IAAIC,OAAO,GAAG,CACZ;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,GAAG,EAAE,kBAAP;AAA2BC,IAAAA,GAAG,EAAE;AAAhC;AAHZ,CADY,EAMZ;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,GAAG,EAAE,iBAAP;AAA0BC,IAAAA,GAAG,EAAE;AAA/B;AAHZ,CANY,EAWZ;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,GAAG,EAAE,iBAAP;AAA0BC,IAAAA,GAAG,EAAE;AAA/B;AAHZ,CAXY,EAgBZ;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE,CAAC;AAAxB;AAHZ,CAhBY,EAqBZ;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,GAAG,EAAE,iBAAP;AAA0BC,IAAAA,GAAG,EAAE,CAAC;AAAhC;AAHZ,CArBY,CAAd;;AA+BA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAEzB,OAAKC,KAAL,GAAa;AACXC,IAAAA,iBAAiB,EAAE,KADR;AACgB;AAC3BC,IAAAA,YAAY,EAAE,EAFH;AAEgB;AAC3BC,IAAAA,aAAa,EAAE,EAHJ;AAGiB;AAG5BP,IAAAA,GAAG,EAAE,CANM;AAOTC,IAAAA,GAAG,EAAE;AAPI,GAAb;;AAWA,QAAMO,aAAa,GAAG,CAACL,KAAD,EAAQM,MAAR,EAAgBC,CAAhB,KACpB,KAAKC,QAAL,CAAc;AACZJ,IAAAA,aAAa,EAAEJ,KADH;AAEZG,IAAAA,YAAY,EAAEG,MAFF;AAGZJ,IAAAA,iBAAiB,EAAE;AAHP,GAAd,CADF;;AAOA,QAAMO,OAAO,GAAGT,KAAK,IAAI;AACvB,QAAI,KAAKC,KAAL,CAAWC,iBAAf,EAAkC;AAChC,WAAKM,QAAL,CAAc;AACZN,QAAAA,iBAAiB,EAAE,KADP;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID;AACF,GAPD;;AAWE,QAAM;AAAEN,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAe,KAAKG,KAA1B;AACA,sBAIE,oBAAC,GAAD;AACE,IAAA,MAAM,EAAE,KAAKD,KAAL,CAAWU,MADrB;AAEE,IAAA,IAAI,EAAE,CAFR;AAGE,IAAA,KAAK,EAAEpB,SAHT;AAIE,IAAA,aAAa,EAAE;AAEbO,MAAAA,GAAG,EAAE,CAFQ;AAGbC,MAAAA,GAAG,EAAE;AAHQ,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaEL,OAAO,CAACkB,GAAR,CAAY;AAAA,QAAC;AAACjB,MAAAA,EAAD;AAAKC,MAAAA,IAAL;AAAWC,MAAAA;AAAX,KAAD;AAAA,wBACX,oBAAC,MAAD;AACA,MAAA,GAAG,EAAEF,EADL;AAEA,MAAA,QAAQ,EAAEE,QAFV;AAGA,MAAA,OAAO,EAAE,KAAKS,aAHd;AAIA,MAAA,IAAI,EAAEV,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAZ,CAbF,eAsBA,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE;AAAEE,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAlB;AAAgC,IAAA,OAAO,EAAE,KAAKO,aAA9C;AAA6D,IAAA,IAAI,EAAC,gBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBA,eAyBE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWE,YADrB;AAEE,IAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,iBAFtB;AAGE,IAAA,OAAO,EAAE,KAAKO,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,KAAKR,KAAL,CAAWG,aAAX,CAAyBT,IAA9B,CADF,CALF,CAzBF,CAJF;AA2CD;;AAGH,eAAeR,gBAAgB,CAAC;AAC9ByB,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZb,SAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\n\nconst mapStyles = {\n  width: '70%',\n  height: '100%'\n};\n\nvar markers = [\n  {\n    id: 1,\n    name: \"Paris\",\n    position: { lat: 48.856788489137216, lng: 2.3521950779098466 }\n  },\n  {\n    id: 2,\n    name: \"Tokyo\",\n    position: { lat: 35.68060395408808, lng: 139.7690013067459 }\n  },\n  {\n    id: 3,\n    name: \"Pékin\",\n    position: { lat: 39.90445096377794, lng: 116.40744327976226 }\n  },\n  {\n    id: 4,\n    name: \"New York\",\n    position: { lat: 40.712776, lng: -74.005974 }\n  },\n  {\n    id: 5,\n    name: \"Mexique\",\n    position: { lat: 23.63480446746952, lng: -102.55273572023772}\n  }\n];\n\n\n\n\nfunction SimpleMap (props) {\n\n  this.state = {\n    showingInfoWindow: false,  // Hides or shows the InfoWindow\n    activeMarker: {},          // Shows the active marker upon click\n    selectedPlace: {} ,         // Shows the InfoWindow to the selected place upon a marker\n   \n     \n    lat: 0,\n      lng: 0,\n  };\n\n \n  const onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  const onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n\n    \n    const { lat, lng } = this.state;\n    return (\n\n    \n\n      <Map\n        google={this.props.google}\n        zoom={3}\n        style={mapStyles}\n        initialCenter={{\n          \n          lat: 7,\n          lng: 7\n\n          \n        }}\n      >\n       \n       {markers.map(({id, name, position }) => (\n         <Marker\n         key={id}\n         position={position}\n         onClick={this.onMarkerClick}\n         name={name}\n       ></Marker>\n       ))}\n\n      <Marker position={{ lat, lng }} onClick={this.onMarkerClick} name=\"Votre position\"/>\n     \n        \n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </Map>\n\n      \n     \n    );\n  }\n\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDE19jz0Ojpx2q-mepUlNKjlH5mUvrkHsM'\n})(SimpleMap);"]},"metadata":{},"sourceType":"module"}