{"ast":null,"code":"var _jsxFileName = \"/home/etudiant/Bureau/test/test2/react-todo-app-v1-master/src/components/TodoForm.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Autocomplete from \"react-google-autocomplete\";\nconst API_KEY = \"'AIzaSyDE19jz0Ojpx2q-mepUlNKjlH5mUvrkHsM'\";\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  const onPlaceSelected = React.useCallback(function callback(place) {\n    const address = place.formatted_address;\n    const addressArray = place.address_components;\n    const city = getCity(addressArray);\n    const area = getArea(addressArray);\n    const state = getState(addressArray);\n    const latValue = place.geometry.location.lat();\n    const lngValue = place.geometry.location.lng();\n    setState({\n      address: address || \"\",\n      area: area || \"\",\n      city: city || \"\",\n      state: state || \"\",\n      markerPositionLat: latValue,\n      markerPositionLng: lngValue,\n      mapPositionLat: latValue,\n      mapPositionLng: lngValue\n    });\n  }, []);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"todo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, props.edit ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Update your item\",\n    value: input,\n    onChange: handleChange,\n    name: \"text\",\n    ref: inputRef,\n    className: \"todo-input edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    className: \"todo-button edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Update\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Autocomplete, {\n    apiKey: API_KEY,\n    placeholder: \"Ajouter une ville\",\n    onChange: handleChange,\n    name: \"text\",\n    className: \"todo-input\",\n    value: input,\n    ref: inputRef,\n    onPlaceSelected: this.onPlaceSelected //console.log(input.address_components[0].long_name);\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), \";\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    className: \"todo-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Ajouter\")));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/home/etudiant/Bureau/test/test2/react-todo-app-v1-master/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","Autocomplete","API_KEY","TodoForm","props","input","setInput","edit","value","inputRef","onPlaceSelected","useCallback","callback","place","address","formatted_address","addressArray","address_components","city","getCity","area","getArea","state","getState","latValue","geometry","location","lat","lngValue","lng","setState","markerPositionLat","markerPositionLng","mapPositionLat","mapPositionLng","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Autocomplete from \"react-google-autocomplete\";\n\n\nconst API_KEY = \"'AIzaSyDE19jz0Ojpx2q-mepUlNKjlH5mUvrkHsM'\";\n\n\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  const onPlaceSelected = React.useCallback(function callback(place) {\n    const address = place.formatted_address;\n    const addressArray = place.address_components;\n    const city = getCity(addressArray);\n    const area = getArea(addressArray);\n    const state = getState(addressArray);\n    const latValue = place.geometry.location.lat();\n    const lngValue = place.geometry.location.lng();\n\n    setState({\n      address: address || \"\",\n      area: area || \"\",\n      city: city || \"\",\n      state: state || \"\",\n      markerPositionLat: latValue,\n      markerPositionLng: lngValue,\n      mapPositionLat: latValue,\n      mapPositionLng: lngValue\n    });\n  }, []);\n  \n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n  \n\n      <Autocomplete\n    apiKey= {API_KEY}\n    placeholder='Ajouter une ville'\n    onChange={handleChange}\n    name='text'\n    className='todo-input'\n    value = {input}\n    ref={inputRef}\n    onPlaceSelected={this.onPlaceSelected}\n      //console.log(input.address_components[0].long_name);\n    \n   \n  \n/>;\n\n          <button onClick={handleSubmit} className='todo-button'>\n            Ajouter\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}